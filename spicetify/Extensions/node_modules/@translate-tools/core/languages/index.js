"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLanguageCodeISO639v2 = exports.isLanguageCodeISO639v1 = exports.getLanguageCodesISO639 = void 0;
var _ISO639LangCodesList = _interopRequireDefault(require("./ISO639LangCodesList"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var __values = void 0 && (void 0).__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
    m = s && o[s],
    i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
/**
 * Check is string are 639-1 lang code
 *
 * Values are case sensitive, if you need, you have to convert strings to lower case to check
 */
var isLanguageCodeISO639v1 = function (code) {
  return Boolean(code && _ISO639LangCodesList.default.some(function (lang) {
    return code === lang.v1;
  }));
};
/**
 * Check is string are 639-2 lang code
 *
 * Values are case sensitive, if you need, you have to convert strings to lower case to check
 */
exports.isLanguageCodeISO639v1 = isLanguageCodeISO639v1;
var isLanguageCodeISO639v2 = function (code) {
  return Boolean(code && _ISO639LangCodesList.default.some(function (lang) {
    return code === lang.v2 || code === lang.v2B || code === lang.v2T;
  }));
};
/**
 * Return subset of ISO-639 lang codes
 */
exports.isLanguageCodeISO639v2 = isLanguageCodeISO639v2;
var getLanguageCodesISO639 = function (set) {
  var e_1, _a;
  var pickedLanguages = [];
  try {
    for (var languages_1 = __values(_ISO639LangCodesList.default), languages_1_1 = languages_1.next(); !languages_1_1.done; languages_1_1 = languages_1.next()) {
      var lang = languages_1_1.value;
      switch (set) {
        case 'v1':
          if (lang.v1) {
            pickedLanguages.push(lang.v1);
          }
          break;
        case 'v2':
          pickedLanguages.push(lang.v2);
          break;
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (languages_1_1 && !languages_1_1.done && (_a = languages_1.return)) _a.call(languages_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
  return pickedLanguages;
};
exports.getLanguageCodesISO639 = getLanguageCodesISO639;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2VzL2luZGV4LmpzIiwibmFtZXMiOlsiX0lTTzYzOUxhbmdDb2Rlc0xpc3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaXNMYW5ndWFnZUNvZGVJU082Mzl2MSIsImNvZGUiLCJCb29sZWFuIiwibGFuZ3VhZ2VzIiwic29tZSIsImxhbmciLCJ2MSIsImV4cG9ydHMiLCJpc0xhbmd1YWdlQ29kZUlTTzYzOXYyIiwidjIiLCJ2MkIiLCJ2MlQiLCJnZXRMYW5ndWFnZUNvZGVzSVNPNjM5Iiwic2V0IiwicGlja2VkTGFuZ3VhZ2VzIiwibGFuZ3VhZ2VzXzEiLCJfX3ZhbHVlcyIsImxhbmd1YWdlc18xXzEiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwicHVzaCJdLCJzb3VyY2VzIjpbImxhbmd1YWdlcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbGFuZ3VhZ2VzIGZyb20gJy4vSVNPNjM5TGFuZ0NvZGVzTGlzdCc7XG5cbi8qKlxuICogQ2hlY2sgaXMgc3RyaW5nIGFyZSA2MzktMSBsYW5nIGNvZGVcbiAqXG4gKiBWYWx1ZXMgYXJlIGNhc2Ugc2Vuc2l0aXZlLCBpZiB5b3UgbmVlZCwgeW91IGhhdmUgdG8gY29udmVydCBzdHJpbmdzIHRvIGxvd2VyIGNhc2UgdG8gY2hlY2tcbiAqL1xuZXhwb3J0IGNvbnN0IGlzTGFuZ3VhZ2VDb2RlSVNPNjM5djEgPSAoY29kZTogc3RyaW5nKSA9PiB7XG5cdHJldHVybiBCb29sZWFuKGNvZGUgJiYgbGFuZ3VhZ2VzLnNvbWUoKGxhbmcpID0+IGNvZGUgPT09IGxhbmcudjEpKTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaXMgc3RyaW5nIGFyZSA2MzktMiBsYW5nIGNvZGVcbiAqXG4gKiBWYWx1ZXMgYXJlIGNhc2Ugc2Vuc2l0aXZlLCBpZiB5b3UgbmVlZCwgeW91IGhhdmUgdG8gY29udmVydCBzdHJpbmdzIHRvIGxvd2VyIGNhc2UgdG8gY2hlY2tcbiAqL1xuZXhwb3J0IGNvbnN0IGlzTGFuZ3VhZ2VDb2RlSVNPNjM5djIgPSAoY29kZTogc3RyaW5nKSA9PiB7XG5cdHJldHVybiBCb29sZWFuKFxuXHRcdGNvZGUgJiZcblx0XHRcdGxhbmd1YWdlcy5zb21lKFxuXHRcdFx0XHQobGFuZykgPT4gY29kZSA9PT0gbGFuZy52MiB8fCBjb2RlID09PSBsYW5nLnYyQiB8fCBjb2RlID09PSBsYW5nLnYyVCxcblx0XHRcdCksXG5cdCk7XG59O1xuXG4vKipcbiAqIFJldHVybiBzdWJzZXQgb2YgSVNPLTYzOSBsYW5nIGNvZGVzXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRMYW5ndWFnZUNvZGVzSVNPNjM5ID0gKHNldDogJ3YxJyB8ICd2MicpID0+IHtcblx0Y29uc3QgcGlja2VkTGFuZ3VhZ2VzOiBzdHJpbmdbXSA9IFtdO1xuXHRmb3IgKGNvbnN0IGxhbmcgb2YgbGFuZ3VhZ2VzKSB7XG5cdFx0c3dpdGNoIChzZXQpIHtcblx0XHRjYXNlICd2MSc6XG5cdFx0XHRpZiAobGFuZy52MSkge1xuXHRcdFx0XHRwaWNrZWRMYW5ndWFnZXMucHVzaChsYW5nLnYxKTtcblx0XHRcdH1cblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgJ3YyJzpcblx0XHRcdHBpY2tlZExhbmd1YWdlcy5wdXNoKGxhbmcudjIpO1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHBpY2tlZExhbmd1YWdlcztcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLG9CQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBOEMsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTlDOzs7OztBQUtPLElBQU1HLHNCQUFzQixHQUFHLFNBQUFBLENBQUNDLElBQVk7RUFDbEQsT0FBT0MsT0FBTyxDQUFDRCxJQUFJLElBQUlFLDRCQUFTLENBQUNDLElBQUksQ0FBQyxVQUFDQyxJQUFJO0lBQUssT0FBQUosSUFBSSxLQUFLSSxJQUFJLENBQUNDLEVBQUU7RUFBaEIsQ0FBZ0IsQ0FBQyxDQUFDO0FBQ25FLENBQUM7QUFFRDs7Ozs7QUFBQUMsT0FBQSxDQUFBUCxzQkFBQSxHQUFBQSxzQkFBQTtBQUtPLElBQU1RLHNCQUFzQixHQUFHLFNBQUFBLENBQUNQLElBQVk7RUFDbEQsT0FBT0MsT0FBTyxDQUNiRCxJQUFJLElBQ0hFLDRCQUFTLENBQUNDLElBQUksQ0FDYixVQUFDQyxJQUFJO0lBQUssT0FBQUosSUFBSSxLQUFLSSxJQUFJLENBQUNJLEVBQUUsSUFBSVIsSUFBSSxLQUFLSSxJQUFJLENBQUNLLEdBQUcsSUFBSVQsSUFBSSxLQUFLSSxJQUFJLENBQUNNLEdBQUc7RUFBMUQsQ0FBMEQsQ0FDcEUsQ0FDRjtBQUNGLENBQUM7QUFFRDs7O0FBQUFKLE9BQUEsQ0FBQUMsc0JBQUEsR0FBQUEsc0JBQUE7QUFHTyxJQUFNSSxzQkFBc0IsR0FBRyxTQUFBQSxDQUFDQyxHQUFnQjs7RUFDdEQsSUFBTUMsZUFBZSxHQUFhLEVBQUU7O0lBQ3BDLEtBQW1CLElBQUFDLFdBQUEsR0FBQUMsUUFBQSxDQUFBYiw0QkFBUyxHQUFBYyxhQUFBLEdBQUFGLFdBQUEsQ0FBQUcsSUFBQSxLQUFBRCxhQUFBLENBQUFFLElBQUEsRUFBQUYsYUFBQSxHQUFBRixXQUFBLENBQUFHLElBQUEsSUFBRTtNQUF6QixJQUFNYixJQUFJLEdBQUFZLGFBQUEsQ0FBQUcsS0FBQTtNQUNkLFFBQVFQLEdBQUc7UUFDWCxLQUFLLElBQUk7VUFDUixJQUFJUixJQUFJLENBQUNDLEVBQUUsRUFBRTtZQUNaUSxlQUFlLENBQUNPLElBQUksQ0FBQ2hCLElBQUksQ0FBQ0MsRUFBRSxDQUFDOztVQUU5QjtRQUNELEtBQUssSUFBSTtVQUNSUSxlQUFlLENBQUNPLElBQUksQ0FBQ2hCLElBQUksQ0FBQ0ksRUFBRSxDQUFDO1VBQzdCO01BQU07Ozs7Ozs7Ozs7Ozs7RUFJUixPQUFPSyxlQUFlO0FBQ3ZCLENBQUM7QUFBQ1AsT0FBQSxDQUFBSyxzQkFBQSxHQUFBQSxzQkFBQSJ9
