import { langCode, langCodeWithAuto } from './Translator';
import { BaseTranslator } from './BaseTranslator';
/**
 * Fake translator for use in tests and debug
 */
export declare class FakeTranslator extends BaseTranslator<{
    delay?: number | 'random';
}> {
    static readonly translatorName = "FakeTranslator";
    static isSupportedAutoFrom(): boolean;
    static getSupportedLanguages(): langCode[];
    getLengthLimit(): number;
    getRequestsTimeout(): number;
    checkDirection(from: langCodeWithAuto, to: langCode): boolean;
    translate(text: string, from: langCodeWithAuto, to: langCode): Promise<string>;
    translateBatch(text: string[], from: langCodeWithAuto, to: langCode): Promise<(string | null)[]>;
}
/**
 * Fake translator which always throw error for use in tests and debug
 */
export declare class ErrorFakeTranslator extends FakeTranslator {
    static readonly translatorName = "FakeTranslator";
    translate(_text: string, _from: langCodeWithAuto, _to: langCode): Promise<string>;
    translateBatch(_text: string[], _from: langCodeWithAuto, _to: langCode): Promise<string[]>;
}
