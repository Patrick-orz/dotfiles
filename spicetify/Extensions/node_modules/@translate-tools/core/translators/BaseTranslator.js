"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseTranslator = void 0;
// TODO: remove it and provide utils to implement translators
/**
 * Basic abstract class for translator
 */
var BaseTranslator = /** @class */function () {
  function BaseTranslator(options) {
    var _this = this;
    this.options = {};
    /**
     * Util to wrap url to CORS proxy
     */
    this.wrapUrlToCorsProxy = function (url) {
      // Use as prefix
      if (typeof _this.options.corsProxy === 'string') {
        return _this.options.corsProxy + url;
      }
      // Run user defined transformation
      if (typeof _this.options.corsProxy === 'function') {
        return _this.options.corsProxy(url);
      }
      return url;
    };
    if (options !== undefined) {
      this.options = options;
    }
  }
  BaseTranslator.prototype.checkLimitExceeding = function (text) {
    var plainText = Array.isArray(text) ? text.join('') : text;
    var extra = plainText.length - this.getLengthLimit();
    return extra > 0 ? extra : 0;
  };
  BaseTranslator.translatorName = 'UnknownTranslator';
  BaseTranslator.isRequiredKey = function () {
    return false;
  };
  BaseTranslator.isSupportedAutoFrom = function () {
    return false;
  };
  BaseTranslator.getSupportedLanguages = function () {
    return [];
  };
  return BaseTranslator;
}();
exports.BaseTranslator = BaseTranslator;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRvcnMvQmFzZVRyYW5zbGF0b3IuanMiLCJuYW1lcyI6WyJCYXNlVHJhbnNsYXRvciIsIm9wdGlvbnMiLCJfdGhpcyIsIndyYXBVcmxUb0NvcnNQcm94eSIsInVybCIsImNvcnNQcm94eSIsInVuZGVmaW5lZCIsInByb3RvdHlwZSIsImNoZWNrTGltaXRFeGNlZWRpbmciLCJ0ZXh0IiwicGxhaW5UZXh0IiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsImV4dHJhIiwibGVuZ3RoIiwiZ2V0TGVuZ3RoTGltaXQiLCJ0cmFuc2xhdG9yTmFtZSIsImlzUmVxdWlyZWRLZXkiLCJpc1N1cHBvcnRlZEF1dG9Gcm9tIiwiZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInRyYW5zbGF0b3JzL0Jhc2VUcmFuc2xhdG9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zbGF0b3JJbnN0YW5jZU1lbWJlcnMsIGxhbmdDb2RlLCBsYW5nQ29kZVdpdGhBdXRvIH0gZnJvbSAnLi9UcmFuc2xhdG9yJztcblxuZXhwb3J0IHR5cGUgQ29yc1Byb3h5ID0gc3RyaW5nIHwgKCh1cmw6IHN0cmluZykgPT4gc3RyaW5nKTtcblxuZXhwb3J0IHR5cGUgVHJhbnNsYXRvck9wdGlvbnM8TyBleHRlbmRzIFJlY29yZDxhbnksIGFueT4gPSB7fT4gPSBPICYge1xuXHQvKipcblx0ICogQVBJIGVuZHBvaW50IFVSTFxuXHQgKi9cblx0YXBpSG9zdD86IHN0cmluZztcblxuXHQvKipcblx0ICogQWNjZXNzIGtleSBmb3IgcmVxdWVzdHMgdG8gdHJhbnNsYXRvciBBUElcblx0ICovXG5cdGFwaUtleT86IHN0cmluZztcblxuXHQvKipcblx0ICogVW5pb24gdGV4dCBhcnJheSB0byAxIHJlcXVlc3QgKG9yIG1vcmUsIGJ1dCBsZXNzIHRoYW4gdXN1YWx5IGFueXdheSkuXG5cdCAqXG5cdCAqIE9wdGlvbiBmb3IgcmVkdWNlIHRoZSBudW1iZXIgb2YgcmVxdWVzdHMsIGJ1dCBpdCBjYW4gbWFrZSBhcnRlZmFjdHMgaW4gdHJhbnNsYXRlZCB0ZXh0LlxuXHQgKlxuXHQgKiBTb21lIG1vZHVsZXMgbWF5IG5vdCBzdXBwb3J0IHRoaXMgZmVhdHVyZS5cblx0ICovXG5cdHVzZU11bHRpcGxleGluZz86IGJvb2xlYW47XG5cblx0LyoqXG5cdCAqIEFkZGl0aW9uYWwgaGVhZGVycyBmb3IgcmVxdWVzdHNcblx0ICovXG5cdGhlYWRlcnM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuXG5cdC8qKlxuXHQgKiBQcm94eSBwcmVmaXggb3IgdHJhbnNmb3JtIGZ1bmN0aW9uIHdoaWNoIHJldHVybiB1cmwgd2l0aCBDT1JTIHByb3h5XG5cdCAqXG5cdCAqIENPUlMgcHJveHkgdXNlZnVsIHRvIGF2b2lkIENPUlMgZXJyb3IgaW4gYnJvd3NlciBvciB0byBtYXNrIHNlcnZlciByZXF1ZXN0cyBhcyBicm93c2VyIHJlcXVlc3RzLlxuXHQgKlxuXHQgKiBBbGwgcmVxdWVzdHMgd2lsbCBzZW5kIHRocm91Z2ggdGhpcyBwcm94eSBzZXJ2ZXIgYW5kIHRoaXMgc2VydmVyIHdpbGwgbW9kaWZ5IGhlYWRlcnNcblx0ICovXG5cdGNvcnNQcm94eT86IENvcnNQcm94eTtcbn07XG5cbi8vIFRPRE86IHJlbW92ZSBpdCBhbmQgcHJvdmlkZSB1dGlscyB0byBpbXBsZW1lbnQgdHJhbnNsYXRvcnNcbi8qKlxuICogQmFzaWMgYWJzdHJhY3QgY2xhc3MgZm9yIHRyYW5zbGF0b3JcbiAqL1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZVRyYW5zbGF0b3I8QyBleHRlbmRzIFJlY29yZDxhbnksIGFueT4gPSB7fT5cbmltcGxlbWVudHMgVHJhbnNsYXRvckluc3RhbmNlTWVtYmVyc1xue1xuXHRwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHRyYW5zbGF0b3JOYW1lOiBzdHJpbmcgPSAnVW5rbm93blRyYW5zbGF0b3InO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNSZXF1aXJlZEtleSA9ICgpID0+IGZhbHNlO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNTdXBwb3J0ZWRBdXRvRnJvbSA9ICgpID0+IGZhbHNlO1xuXG5cdHB1YmxpYyBzdGF0aWMgZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzID0gKCk6IGxhbmdDb2RlW10gPT4gW107XG5cblx0cHVibGljIGFic3RyYWN0IGdldExlbmd0aExpbWl0KCk6IG51bWJlcjtcblxuXHRwdWJsaWMgYWJzdHJhY3QgZ2V0UmVxdWVzdHNUaW1lb3V0KCk6IG51bWJlcjtcblxuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgb3B0aW9ucyA9IHt9IGFzIFRyYW5zbGF0b3JPcHRpb25zPEM+O1xuXHRjb25zdHJ1Y3RvcihvcHRpb25zPzogVHJhbnNsYXRvck9wdGlvbnM8Qz4pIHtcblx0XHRpZiAob3B0aW9ucyAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdH1cblx0fVxuXG5cdGFic3RyYWN0IHRyYW5zbGF0ZShcblx0XHR0ZXh0OiBzdHJpbmcsXG5cdFx0bGFuZ0Zyb206IGxhbmdDb2RlV2l0aEF1dG8sXG5cdFx0bGFuZ1RvOiBsYW5nQ29kZSxcblx0KTogUHJvbWlzZTxzdHJpbmc+O1xuXG5cdGFic3RyYWN0IHRyYW5zbGF0ZUJhdGNoKFxuXHRcdHRleHQ6IHN0cmluZ1tdLFxuXHRcdGxhbmdGcm9tOiBsYW5nQ29kZVdpdGhBdXRvLFxuXHRcdGxhbmdUbzogbGFuZ0NvZGUsXG5cdCk6IFByb21pc2U8QXJyYXk8c3RyaW5nIHwgbnVsbD4+O1xuXG5cdHB1YmxpYyBjaGVja0xpbWl0RXhjZWVkaW5nKHRleHQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG5cdFx0Y29uc3QgcGxhaW5UZXh0ID0gQXJyYXkuaXNBcnJheSh0ZXh0KSA/IHRleHQuam9pbignJykgOiB0ZXh0O1xuXHRcdGNvbnN0IGV4dHJhID0gcGxhaW5UZXh0Lmxlbmd0aCAtIHRoaXMuZ2V0TGVuZ3RoTGltaXQoKTtcblx0XHRyZXR1cm4gZXh0cmEgPiAwID8gZXh0cmEgOiAwO1xuXHR9XG5cblx0LyoqXG5cdCAqIFV0aWwgdG8gd3JhcCB1cmwgdG8gQ09SUyBwcm94eVxuXHQgKi9cblx0cHJvdGVjdGVkIHdyYXBVcmxUb0NvcnNQcm94eSA9ICh1cmw6IHN0cmluZykgPT4ge1xuXHRcdC8vIFVzZSBhcyBwcmVmaXhcblx0XHRpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5jb3JzUHJveHkgPT09ICdzdHJpbmcnKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zLmNvcnNQcm94eSArIHVybDtcblx0XHR9XG5cblx0XHQvLyBSdW4gdXNlciBkZWZpbmVkIHRyYW5zZm9ybWF0aW9uXG5cdFx0aWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuY29yc1Byb3h5ID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zLmNvcnNQcm94eSh1cmwpO1xuXHRcdH1cblxuXHRcdHJldHVybiB1cmw7XG5cdH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQXVDQTtBQUNBOzs7QUFJQSxJQUFBQSxjQUFBO0VBZ0JDLFNBQUFBLGVBQVlDLE9BQThCO0lBQTFDLElBQUFDLEtBQUE7SUFEbUIsS0FBQUQsT0FBTyxHQUFHLEVBQTBCO0lBeUJ2RDs7O0lBR1UsS0FBQUUsa0JBQWtCLEdBQUcsVUFBQ0MsR0FBVztNQUMxQztNQUNBLElBQUksT0FBT0YsS0FBSSxDQUFDRCxPQUFPLENBQUNJLFNBQVMsS0FBSyxRQUFRLEVBQUU7UUFDL0MsT0FBT0gsS0FBSSxDQUFDRCxPQUFPLENBQUNJLFNBQVMsR0FBR0QsR0FBRzs7TUFHcEM7TUFDQSxJQUFJLE9BQU9GLEtBQUksQ0FBQ0QsT0FBTyxDQUFDSSxTQUFTLEtBQUssVUFBVSxFQUFFO1FBQ2pELE9BQU9ILEtBQUksQ0FBQ0QsT0FBTyxDQUFDSSxTQUFTLENBQUNELEdBQUcsQ0FBQzs7TUFHbkMsT0FBT0EsR0FBRztJQUNYLENBQUM7SUF0Q0EsSUFBSUgsT0FBTyxLQUFLSyxTQUFTLEVBQUU7TUFDMUIsSUFBSSxDQUFDTCxPQUFPLEdBQUdBLE9BQU87O0VBRXhCO0VBY09ELGNBQUEsQ0FBQU8sU0FBQSxDQUFBQyxtQkFBbUIsR0FBMUIsVUFBMkJDLElBQXVCO0lBQ2pELElBQU1DLFNBQVMsR0FBR0MsS0FBSyxDQUFDQyxPQUFPLENBQUNILElBQUksQ0FBQyxHQUFHQSxJQUFJLENBQUNJLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBR0osSUFBSTtJQUM1RCxJQUFNSyxLQUFLLEdBQUdKLFNBQVMsQ0FBQ0ssTUFBTSxHQUFHLElBQUksQ0FBQ0MsY0FBYyxFQUFFO0lBQ3RELE9BQU9GLEtBQUssR0FBRyxDQUFDLEdBQUdBLEtBQUssR0FBRyxDQUFDO0VBQzdCLENBQUM7RUFuQ3NCZCxjQUFBLENBQUFpQixjQUFjLEdBQVcsbUJBQW1CO0VBRXJEakIsY0FBQSxDQUFBa0IsYUFBYSxHQUFHO0lBQU0sWUFBSztFQUFMLENBQUs7RUFFM0JsQixjQUFBLENBQUFtQixtQkFBbUIsR0FBRztJQUFNLFlBQUs7RUFBTCxDQUFLO0VBRWpDbkIsY0FBQSxDQUFBb0IscUJBQXFCLEdBQUc7SUFBa0IsU0FBRTtFQUFGLENBQUU7RUErQzNELE9BQUFwQixjQUFDO0NBeERELEVBd0RDO0FBQUFxQixPQUFBLENBQUFyQixjQUFBLEdBQUFBLGNBQUEifQ==
