var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { BaseTranslator } from './BaseTranslator';
/**
 * Fake translator for use in tests and debug
 */
var FakeTranslator = /** @class */ (function (_super) {
    __extends(FakeTranslator, _super);
    function FakeTranslator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FakeTranslator.isSupportedAutoFrom = function () {
        return false;
    };
    FakeTranslator.getSupportedLanguages = function () {
        return ['ru', 'en', 'de', 'ja'];
    };
    FakeTranslator.prototype.getLengthLimit = function () {
        return 3000;
    };
    FakeTranslator.prototype.getRequestsTimeout = function () {
        return 10;
    };
    FakeTranslator.prototype.checkDirection = function (from, to) {
        return from == 'ru' && to == 'ja' ? false : true;
    };
    FakeTranslator.prototype.translate = function (text, from, to) {
        var delay = this.options.delay === undefined
            ? 0
            : this.options.delay === 'random'
                ? Math.floor(Math.random() * 1000)
                : this.options.delay;
        return new Promise(function (resolve) {
            setTimeout(function () { return resolve("*[".concat(from, "-").concat(to, "]") + text); }, delay);
        });
    };
    FakeTranslator.prototype.translateBatch = function (text, from, to) {
        var _this = this;
        return Promise.all(text.map(function (i) { return _this.translate(i, from, to).catch(function () { return null; }); }));
    };
    FakeTranslator.translatorName = 'FakeTranslator';
    return FakeTranslator;
}(BaseTranslator));
export { FakeTranslator };
/**
 * Fake translator which always throw error for use in tests and debug
 */
var ErrorFakeTranslator = /** @class */ (function (_super) {
    __extends(ErrorFakeTranslator, _super);
    function ErrorFakeTranslator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ErrorFakeTranslator.prototype.translate = function (_text, _from, _to) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new Error('Fake error for translate method');
            });
        });
    };
    ErrorFakeTranslator.prototype.translateBatch = function (_text, _from, _to) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new Error('Fake error for translateBatch method');
            });
        });
    };
    ErrorFakeTranslator.translatorName = 'FakeTranslator';
    return ErrorFakeTranslator;
}(FakeTranslator));
export { ErrorFakeTranslator };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0b3JzL0Zha2VUcmFuc2xhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRDs7R0FFRztBQUNIO0lBQW9DLGtDQUVsQztJQUZGOztJQTBDQSxDQUFDO0lBckNjLGtDQUFtQixHQUFqQztRQUNDLE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVhLG9DQUFxQixHQUFuQztRQUNDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sdUNBQWMsR0FBckI7UUFDQyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFTSwyQ0FBa0IsR0FBekI7UUFDQyxPQUFPLEVBQUUsQ0FBQztJQUNYLENBQUM7SUFFTSx1Q0FBYyxHQUFyQixVQUFzQixJQUFzQixFQUFFLEVBQVk7UUFDekQsT0FBTyxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUUsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ2xELENBQUM7SUFFTSxrQ0FBUyxHQUFoQixVQUFpQixJQUFZLEVBQUUsSUFBc0IsRUFBRSxFQUFZO1FBQ2xFLElBQU0sS0FBSyxHQUNWLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxLQUFLLFNBQVM7WUFDL0IsQ0FBQyxDQUFDLENBQUM7WUFDSCxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUssUUFBUTtnQkFDaEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQztnQkFDbEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxPQUFPLENBQVMsVUFBQyxPQUFPO1lBQ2xDLFVBQVUsQ0FBQyxjQUFNLE9BQUEsT0FBTyxDQUFDLFlBQUssSUFBSSxjQUFJLEVBQUUsTUFBRyxHQUFHLElBQUksQ0FBQyxFQUFsQyxDQUFrQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzdELENBQUMsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVNLHVDQUFjLEdBQXJCLFVBQXNCLElBQWMsRUFBRSxJQUFzQixFQUFFLEVBQVk7UUFBMUUsaUJBSUM7UUFIQSxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQ2pCLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBQyxDQUFDLElBQUssT0FBQSxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLGNBQU0sT0FBQSxJQUFJLEVBQUosQ0FBSSxDQUFDLEVBQTdDLENBQTZDLENBQUMsQ0FDOUQsQ0FBQztJQUNILENBQUM7SUF0Q3NCLDZCQUFjLEdBQUcsZ0JBQWdCLENBQUM7SUF1QzFELHFCQUFDO0NBMUNELEFBMENDLENBMUNtQyxjQUFjLEdBMENqRDtTQTFDWSxjQUFjO0FBNEMzQjs7R0FFRztBQUNIO0lBQXlDLHVDQUFjO0lBQXZEOztJQWtCQSxDQUFDO0lBZmEsdUNBQVMsR0FBdEIsVUFDQyxLQUFhLEVBQ2IsS0FBdUIsRUFDdkIsR0FBYTs7O2dCQUViLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQzs7O0tBQ25EO0lBRVksNENBQWMsR0FBM0IsVUFDQyxLQUFlLEVBQ2YsS0FBdUIsRUFDdkIsR0FBYTs7O2dCQUViLE1BQU0sSUFBSSxLQUFLLENBQUMsc0NBQXNDLENBQUMsQ0FBQzs7O0tBQ3hEO0lBaEJzQixrQ0FBYyxHQUFHLGdCQUFnQixDQUFDO0lBaUIxRCwwQkFBQztDQWxCRCxBQWtCQyxDQWxCd0MsY0FBYyxHQWtCdEQ7U0FsQlksbUJBQW1CIiwiZmlsZSI6InRyYW5zbGF0b3JzL0Zha2VUcmFuc2xhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbGFuZ0NvZGUsIGxhbmdDb2RlV2l0aEF1dG8gfSBmcm9tICcuL1RyYW5zbGF0b3InO1xuaW1wb3J0IHsgQmFzZVRyYW5zbGF0b3IgfSBmcm9tICcuL0Jhc2VUcmFuc2xhdG9yJztcblxuLyoqXG4gKiBGYWtlIHRyYW5zbGF0b3IgZm9yIHVzZSBpbiB0ZXN0cyBhbmQgZGVidWdcbiAqL1xuZXhwb3J0IGNsYXNzIEZha2VUcmFuc2xhdG9yIGV4dGVuZHMgQmFzZVRyYW5zbGF0b3I8e1xuXHRkZWxheT86IG51bWJlciB8ICdyYW5kb20nO1xufT4ge1xuXHRwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHRyYW5zbGF0b3JOYW1lID0gJ0Zha2VUcmFuc2xhdG9yJztcblxuXHRwdWJsaWMgc3RhdGljIGlzU3VwcG9ydGVkQXV0b0Zyb20oKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cHVibGljIHN0YXRpYyBnZXRTdXBwb3J0ZWRMYW5ndWFnZXMoKTogbGFuZ0NvZGVbXSB7XG5cdFx0cmV0dXJuIFsncnUnLCAnZW4nLCAnZGUnLCAnamEnXTtcblx0fVxuXG5cdHB1YmxpYyBnZXRMZW5ndGhMaW1pdCgpIHtcblx0XHRyZXR1cm4gMzAwMDtcblx0fVxuXG5cdHB1YmxpYyBnZXRSZXF1ZXN0c1RpbWVvdXQoKSB7XG5cdFx0cmV0dXJuIDEwO1xuXHR9XG5cblx0cHVibGljIGNoZWNrRGlyZWN0aW9uKGZyb206IGxhbmdDb2RlV2l0aEF1dG8sIHRvOiBsYW5nQ29kZSkge1xuXHRcdHJldHVybiBmcm9tID09ICdydScgJiYgdG8gPT0gJ2phJyA/IGZhbHNlIDogdHJ1ZTtcblx0fVxuXG5cdHB1YmxpYyB0cmFuc2xhdGUodGV4dDogc3RyaW5nLCBmcm9tOiBsYW5nQ29kZVdpdGhBdXRvLCB0bzogbGFuZ0NvZGUpIHtcblx0XHRjb25zdCBkZWxheSA9XG5cdFx0XHR0aGlzLm9wdGlvbnMuZGVsYXkgPT09IHVuZGVmaW5lZFxuXHRcdFx0XHQ/IDBcblx0XHRcdFx0OiB0aGlzLm9wdGlvbnMuZGVsYXkgPT09ICdyYW5kb20nXG5cdFx0XHRcdFx0PyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwKVxuXHRcdFx0XHRcdDogdGhpcy5vcHRpb25zLmRlbGF5O1xuXHRcdHJldHVybiBuZXcgUHJvbWlzZTxzdHJpbmc+KChyZXNvbHZlKSA9PiB7XG5cdFx0XHRzZXRUaW1lb3V0KCgpID0+IHJlc29sdmUoYCpbJHtmcm9tfS0ke3RvfV1gICsgdGV4dCksIGRlbGF5KTtcblx0XHR9KTtcblx0fVxuXG5cdHB1YmxpYyB0cmFuc2xhdGVCYXRjaCh0ZXh0OiBzdHJpbmdbXSwgZnJvbTogbGFuZ0NvZGVXaXRoQXV0bywgdG86IGxhbmdDb2RlKSB7XG5cdFx0cmV0dXJuIFByb21pc2UuYWxsKFxuXHRcdFx0dGV4dC5tYXAoKGkpID0+IHRoaXMudHJhbnNsYXRlKGksIGZyb20sIHRvKS5jYXRjaCgoKSA9PiBudWxsKSksXG5cdFx0KTtcblx0fVxufVxuXG4vKipcbiAqIEZha2UgdHJhbnNsYXRvciB3aGljaCBhbHdheXMgdGhyb3cgZXJyb3IgZm9yIHVzZSBpbiB0ZXN0cyBhbmQgZGVidWdcbiAqL1xuZXhwb3J0IGNsYXNzIEVycm9yRmFrZVRyYW5zbGF0b3IgZXh0ZW5kcyBGYWtlVHJhbnNsYXRvciB7XG5cdHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgdHJhbnNsYXRvck5hbWUgPSAnRmFrZVRyYW5zbGF0b3InO1xuXG5cdHB1YmxpYyBhc3luYyB0cmFuc2xhdGUoXG5cdFx0X3RleHQ6IHN0cmluZyxcblx0XHRfZnJvbTogbGFuZ0NvZGVXaXRoQXV0byxcblx0XHRfdG86IGxhbmdDb2RlLFxuXHQpOiBQcm9taXNlPHN0cmluZz4ge1xuXHRcdHRocm93IG5ldyBFcnJvcignRmFrZSBlcnJvciBmb3IgdHJhbnNsYXRlIG1ldGhvZCcpO1xuXHR9XG5cblx0cHVibGljIGFzeW5jIHRyYW5zbGF0ZUJhdGNoKFxuXHRcdF90ZXh0OiBzdHJpbmdbXSxcblx0XHRfZnJvbTogbGFuZ0NvZGVXaXRoQXV0byxcblx0XHRfdG86IGxhbmdDb2RlLFxuXHQpOiBQcm9taXNlPHN0cmluZ1tdPiB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdGYWtlIGVycm9yIGZvciB0cmFuc2xhdGVCYXRjaCBtZXRob2QnKTtcblx0fVxufVxuIl19
