var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/**
 * Semaphore for the flow control in queues
 *
 * @example
 * const semafor = QueueSemafor({ timeout: 100 });
 * items.map(async item=> {
 * 	const free = await semafor.take();
 * 	// do something with item...
 * 	free();
 * })
 */
var Semaphore = /** @class */ (function () {
    function Semaphore(options) {
        this.timeout = 0;
        this.hijackPrevention = true;
        this.wait = function (time) { return new Promise(function (res) { return setTimeout(res, time); }); };
        this.lastAccess = 0;
        this.semafor = null;
        var _a = options || {}, timeout = _a.timeout, hijackPrevention = _a.hijackPrevention;
        if (timeout !== undefined) {
            if (timeout < 0) {
                throw new Error('Negative number');
            }
            this.timeout = timeout;
        }
        if (hijackPrevention !== undefined) {
            this.hijackPrevention = hijackPrevention;
        }
    }
    Semaphore.prototype.take = function () {
        return __awaiter(this, void 0, void 0, function () {
            var idle, semaforResolver;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!true) return [3 /*break*/, 6];
                        if (!(this.timeout > 0)) return [3 /*break*/, 2];
                        idle = new Date().getTime() - this.lastAccess;
                        if (!(idle < this.timeout)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.wait(this.timeout - idle)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        if (this.semafor === null) {
                            return [3 /*break*/, 6];
                        }
                        return [4 /*yield*/, this.semafor];
                    case 3:
                        _a.sent();
                        if (!this.hijackPrevention) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.wait(Math.floor(Math.random() * 30))];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [3 /*break*/, 0];
                    case 6:
                        this.semafor = new Promise(function (resolve) {
                            semaforResolver = resolve;
                        });
                        return [2 /*return*/, function () {
                                _this.lastAccess = new Date().getTime();
                                _this.semafor = null;
                                semaforResolver();
                            }];
                }
            });
        });
    };
    return Semaphore;
}());
export { Semaphore };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL1NlbWFwaG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7OztHQVVHO0FBQ0g7SUFJQyxtQkFBWSxPQUFpQjtRQUhaLFlBQU8sR0FBVyxDQUFDLENBQUM7UUFDcEIscUJBQWdCLEdBQVksSUFBSSxDQUFDO1FBa0IxQyxTQUFJLEdBQUcsVUFBQyxJQUFZLElBQUssT0FBQSxJQUFJLE9BQU8sQ0FBQyxVQUFDLEdBQUcsSUFBSyxPQUFBLFVBQVUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEVBQXJCLENBQXFCLENBQUMsRUFBM0MsQ0FBMkMsQ0FBQztRQUVyRSxlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsWUFBTyxHQUF5QixJQUFJLENBQUM7UUFsQnRDLElBQUEsS0FBZ0MsT0FBTyxJQUFJLEVBQUUsRUFBM0MsT0FBTyxhQUFBLEVBQUUsZ0JBQWdCLHNCQUFrQixDQUFDO1FBRXBELElBQUksT0FBTyxLQUFLLFNBQVMsRUFBRTtZQUMxQixJQUFJLE9BQU8sR0FBRyxDQUFDLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQzthQUNuQztZQUVELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1NBQ3ZCO1FBRUQsSUFBSSxnQkFBZ0IsS0FBSyxTQUFTLEVBQUU7WUFDbkMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1NBQ3pDO0lBQ0YsQ0FBQztJQU1LLHdCQUFJLEdBQVY7Ozs7Ozs7NkJBQ1EsSUFBSTs2QkFFTixDQUFBLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFBLEVBQWhCLHdCQUFnQjt3QkFDYixJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDOzZCQUNoRCxDQUFBLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFBLEVBQW5CLHdCQUFtQjt3QkFDdEIscUJBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFBOzt3QkFBcEMsU0FBb0MsQ0FBQzs7O3dCQUl2QyxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssSUFBSSxFQUFFOzRCQUMxQix3QkFBTTt5QkFDTjt3QkFFRCxxQkFBTSxJQUFJLENBQUMsT0FBTyxFQUFBOzt3QkFBbEIsU0FBa0IsQ0FBQzs2QkFHZixJQUFJLENBQUMsZ0JBQWdCLEVBQXJCLHdCQUFxQjt3QkFDeEIscUJBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFBOzt3QkFBL0MsU0FBK0MsQ0FBQzs7Ozt3QkFLbEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU87NEJBQ2xDLGVBQWUsR0FBRyxPQUFPLENBQUM7d0JBQzNCLENBQUMsQ0FBQyxDQUFDO3dCQUVILHNCQUFPO2dDQUNOLEtBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztnQ0FDdkMsS0FBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7Z0NBQ3BCLGVBQWUsRUFBRSxDQUFDOzRCQUNuQixDQUFDLEVBQUM7Ozs7S0FDRjtJQUNGLGdCQUFDO0FBQUQsQ0F6REEsQUF5REMsSUFBQSIsImZpbGUiOiJ1dGlscy9TZW1hcGhvcmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgT3B0aW9ucyB7XG5cdHRpbWVvdXQ/OiBudW1iZXI7XG5cdGhpamFja1ByZXZlbnRpb24/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElTZW1hcGhvcmUge1xuXHR0YWtlKCk6IFByb21pc2U8KCkgPT4gdm9pZD47XG59XG5cbi8qKlxuICogU2VtYXBob3JlIGZvciB0aGUgZmxvdyBjb250cm9sIGluIHF1ZXVlc1xuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBzZW1hZm9yID0gUXVldWVTZW1hZm9yKHsgdGltZW91dDogMTAwIH0pO1xuICogaXRlbXMubWFwKGFzeW5jIGl0ZW09PiB7XG4gKiBcdGNvbnN0IGZyZWUgPSBhd2FpdCBzZW1hZm9yLnRha2UoKTtcbiAqIFx0Ly8gZG8gc29tZXRoaW5nIHdpdGggaXRlbS4uLlxuICogXHRmcmVlKCk7XG4gKiB9KVxuICovXG5leHBvcnQgY2xhc3MgU2VtYXBob3JlIGltcGxlbWVudHMgSVNlbWFwaG9yZSB7XG5cdHByaXZhdGUgcmVhZG9ubHkgdGltZW91dDogbnVtYmVyID0gMDtcblx0cHJpdmF0ZSByZWFkb25seSBoaWphY2tQcmV2ZW50aW9uOiBib29sZWFuID0gdHJ1ZTtcblxuXHRjb25zdHJ1Y3RvcihvcHRpb25zPzogT3B0aW9ucykge1xuXHRcdGNvbnN0IHsgdGltZW91dCwgaGlqYWNrUHJldmVudGlvbiB9ID0gb3B0aW9ucyB8fCB7fTtcblxuXHRcdGlmICh0aW1lb3V0ICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdGlmICh0aW1lb3V0IDwgMCkge1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ05lZ2F0aXZlIG51bWJlcicpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xuXHRcdH1cblxuXHRcdGlmIChoaWphY2tQcmV2ZW50aW9uICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdHRoaXMuaGlqYWNrUHJldmVudGlvbiA9IGhpamFja1ByZXZlbnRpb247XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSB3YWl0ID0gKHRpbWU6IG51bWJlcikgPT4gbmV3IFByb21pc2UoKHJlcykgPT4gc2V0VGltZW91dChyZXMsIHRpbWUpKTtcblxuXHRwcml2YXRlIGxhc3RBY2Nlc3MgPSAwO1xuXHRwcml2YXRlIHNlbWFmb3I6IFByb21pc2U8dm9pZD4gfCBudWxsID0gbnVsbDtcblx0YXN5bmMgdGFrZSgpIHtcblx0XHR3aGlsZSAodHJ1ZSkge1xuXHRcdFx0Ly8gV2FpdCB0aW1lb3V0XG5cdFx0XHRpZiAodGhpcy50aW1lb3V0ID4gMCkge1xuXHRcdFx0XHRjb25zdCBpZGxlID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSB0aGlzLmxhc3RBY2Nlc3M7XG5cdFx0XHRcdGlmIChpZGxlIDwgdGhpcy50aW1lb3V0KSB7XG5cdFx0XHRcdFx0YXdhaXQgdGhpcy53YWl0KHRoaXMudGltZW91dCAtIGlkbGUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0aGlzLnNlbWFmb3IgPT09IG51bGwpIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cblx0XHRcdGF3YWl0IHRoaXMuc2VtYWZvcjtcblxuXHRcdFx0Ly8gV2FpdCByYW5kb20gdGltZSB1bnRpbCAzMG1zIHRvIHByZXZlbnQgZmxvdyBoaWphY2tpbmdcblx0XHRcdGlmICh0aGlzLmhpamFja1ByZXZlbnRpb24pIHtcblx0XHRcdFx0YXdhaXQgdGhpcy53YWl0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMwKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0bGV0IHNlbWFmb3JSZXNvbHZlcjogKCkgPT4gdm9pZDtcblx0XHR0aGlzLnNlbWFmb3IgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuXHRcdFx0c2VtYWZvclJlc29sdmVyID0gcmVzb2x2ZTtcblx0XHR9KTtcblxuXHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHR0aGlzLmxhc3RBY2Nlc3MgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblx0XHRcdHRoaXMuc2VtYWZvciA9IG51bGw7XG5cdFx0XHRzZW1hZm9yUmVzb2x2ZXIoKTtcblx0XHR9O1xuXHR9XG59XG4iXX0=
