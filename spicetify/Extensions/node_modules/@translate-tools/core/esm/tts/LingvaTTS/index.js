var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import axios from 'axios';
var LingvaTTS = /** @class */ (function () {
    function LingvaTTS(_a) {
        var _b = _a === void 0 ? {} : _a, apiHost = _b.apiHost;
        this.host = apiHost !== null && apiHost !== void 0 ? apiHost : 'https://translate.plausibility.cloud';
    }
    LingvaTTS.prototype.getAudioBuffer = function (text, language) {
        return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
                url = "".concat(this.host, "/api/v1/audio/").concat(encodeURIComponent(language), "/").concat(encodeURIComponent(text));
                return [2 /*return*/, axios({ url: url, method: 'GET', responseType: 'json' }).then(function (_a) {
                        var json = _a.data;
                        if (typeof json !== 'object' || json === null) {
                            throw new TypeError('Unexpected response');
                        }
                        if (!('audio' in json) || !Array.isArray(json.audio)) {
                            throw new TypeError('Unexpected response');
                        }
                        return {
                            type: 'audio/mpeg',
                            buffer: new Uint8Array(json.audio).buffer,
                        };
                    })];
            });
        });
    };
    LingvaTTS.getSupportedLanguages = function () {
        // prettier-ignore
        return [
            "af", "sq", "am", "ar", "hy", "as", "ay", "az", "bm", "eu",
            "be", "bn", "bho", "bs", "bg", "ca", "ceb", "ny", "zh", "zh_HANT",
            "co", "hr", "cs", "da", "dv", "doi", "nl", "en", "eo", "et", "ee",
            "tl", "fi", "fr", "fy", "gl", "ka", "de", "el", "gn", "gu", "ht",
            "ha", "haw", "iw", "hi", "hmn", "hu", "is", "ig", "ilo", "id",
            "ga", "it", "ja", "jw", "kn", "kk", "km", "rw", "gom", "ko",
            "kri", "ku", "ckb", "ky", "lo", "la", "lv", "ln", "lt", "lg",
            "lb", "mk", "mai", "mg", "ms", "ml", "mt", "mi", "mr", "mni-Mtei",
            "lus", "mn", "my", "ne", "no", "or", "om", "ps", "fa", "pl",
            "pt", "pa", "qu", "ro", "ru", "sm", "sa", "gd", "nso", "sr",
            "st", "sn", "sd", "si", "sk", "sl", "so", "es", "su", "sw", "sv",
            "tg", "ta", "tt", "te", "th", "ti", "ts", "tr", "tk", "ak", "uk", "ur",
            "ug", "uz", "vi", "cy", "xh", "yi", "yo", "zu"
        ];
    };
    return LingvaTTS;
}());
export { LingvaTTS };

//# sourceMappingURL=data:application/json;charset=utf8;base64,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SSxFQUFFLFVBQVU7WUFDakUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUMzRCxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJO1lBQzNELElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQ2hFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUN0RSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtTQUM5QyxDQUFDO0lBQ0gsQ0FBQztJQUNGLGdCQUFDO0FBQUQsQ0E5Q0EsQUE4Q0MsSUFBQSIsImZpbGUiOiJ0dHMvTGluZ3ZhVFRTL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuaW1wb3J0IHsgVFRTQXVkaW9CdWZmZXIsIFRUU1Byb3ZpZGVyUHJvcHMgfSBmcm9tICcuLic7XG5cbmV4cG9ydCBjbGFzcyBMaW5ndmFUVFMgaW1wbGVtZW50cyBUVFNQcm92aWRlclByb3BzIHtcblx0cHJpdmF0ZSByZWFkb25seSBob3N0O1xuXHRjb25zdHJ1Y3Rvcih7IGFwaUhvc3QgfTogeyBhcGlIb3N0Pzogc3RyaW5nIH0gPSB7fSkge1xuXHRcdHRoaXMuaG9zdCA9IGFwaUhvc3QgPz8gJ2h0dHBzOi8vdHJhbnNsYXRlLnBsYXVzaWJpbGl0eS5jbG91ZCc7XG5cdH1cblxuXHRwdWJsaWMgYXN5bmMgZ2V0QXVkaW9CdWZmZXIodGV4dDogc3RyaW5nLCBsYW5ndWFnZTogc3RyaW5nKTogUHJvbWlzZTxUVFNBdWRpb0J1ZmZlcj4ge1xuXHRcdGNvbnN0IHVybCA9IGAke3RoaXMuaG9zdH0vYXBpL3YxL2F1ZGlvLyR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0bGFuZ3VhZ2UsXG5cdFx0KX0vJHtlbmNvZGVVUklDb21wb25lbnQodGV4dCl9YDtcblxuXHRcdHJldHVybiBheGlvcyh7IHVybCwgbWV0aG9kOiAnR0VUJywgcmVzcG9uc2VUeXBlOiAnanNvbicgfSkudGhlbihcblx0XHRcdCh7IGRhdGE6IGpzb24gfSkgPT4ge1xuXHRcdFx0XHRpZiAodHlwZW9mIGpzb24gIT09ICdvYmplY3QnIHx8IGpzb24gPT09IG51bGwpIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmV4cGVjdGVkIHJlc3BvbnNlJyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCEoJ2F1ZGlvJyBpbiBqc29uKSB8fCAhQXJyYXkuaXNBcnJheSgoanNvbiBhcyBhbnkpLmF1ZGlvKSkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1VuZXhwZWN0ZWQgcmVzcG9uc2UnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogJ2F1ZGlvL21wZWcnLFxuXHRcdFx0XHRcdGJ1ZmZlcjogbmV3IFVpbnQ4QXJyYXkoKGpzb24gYXMgYW55KS5hdWRpbykuYnVmZmVyLFxuXHRcdFx0XHR9O1xuXHRcdFx0fSxcblx0XHQpO1xuXHR9XG5cblx0cHVibGljIHN0YXRpYyBnZXRTdXBwb3J0ZWRMYW5ndWFnZXMoKSB7XG5cdFx0Ly8gcHJldHRpZXItaWdub3JlXG5cdFx0cmV0dXJuIFtcblx0XHRcdFwiYWZcIiwgXCJzcVwiLCBcImFtXCIsIFwiYXJcIiwgXCJoeVwiLCBcImFzXCIsIFwiYXlcIiwgXCJhelwiLCBcImJtXCIsIFwiZXVcIixcblx0XHRcdFwiYmVcIiwgXCJiblwiLCBcImJob1wiLCBcImJzXCIsIFwiYmdcIiwgXCJjYVwiLCBcImNlYlwiLCBcIm55XCIsIFwiemhcIiwgXCJ6aF9IQU5UXCIsXG5cdFx0XHRcImNvXCIsIFwiaHJcIiwgXCJjc1wiLCBcImRhXCIsIFwiZHZcIiwgXCJkb2lcIiwgXCJubFwiLCBcImVuXCIsIFwiZW9cIiwgXCJldFwiLCBcImVlXCIsXG5cdFx0XHRcInRsXCIsIFwiZmlcIiwgXCJmclwiLCBcImZ5XCIsIFwiZ2xcIiwgXCJrYVwiLCBcImRlXCIsIFwiZWxcIiwgXCJnblwiLCBcImd1XCIsIFwiaHRcIixcblx0XHRcdFwiaGFcIiwgXCJoYXdcIiwgXCJpd1wiLCBcImhpXCIsIFwiaG1uXCIsIFwiaHVcIiwgXCJpc1wiLCBcImlnXCIsIFwiaWxvXCIsIFwiaWRcIixcblx0XHRcdFwiZ2FcIiwgXCJpdFwiLCBcImphXCIsIFwiandcIiwgXCJrblwiLCBcImtrXCIsIFwia21cIiwgXCJyd1wiLCBcImdvbVwiLCBcImtvXCIsXG5cdFx0XHRcImtyaVwiLCBcImt1XCIsIFwiY2tiXCIsIFwia3lcIiwgXCJsb1wiLCBcImxhXCIsIFwibHZcIiwgXCJsblwiLCBcImx0XCIsIFwibGdcIixcblx0XHRcdFwibGJcIiwgXCJta1wiLCBcIm1haVwiLCBcIm1nXCIsIFwibXNcIiwgXCJtbFwiLCBcIm10XCIsIFwibWlcIiwgXCJtclwiLCBcIm1uaS1NdGVpXCIsXG5cdFx0XHRcImx1c1wiLCBcIm1uXCIsIFwibXlcIiwgXCJuZVwiLCBcIm5vXCIsIFwib3JcIiwgXCJvbVwiLCBcInBzXCIsIFwiZmFcIiwgXCJwbFwiLFxuXHRcdFx0XCJwdFwiLCBcInBhXCIsIFwicXVcIiwgXCJyb1wiLCBcInJ1XCIsIFwic21cIiwgXCJzYVwiLCBcImdkXCIsIFwibnNvXCIsIFwic3JcIixcblx0XHRcdFwic3RcIiwgXCJzblwiLCBcInNkXCIsIFwic2lcIiwgXCJza1wiLCBcInNsXCIsIFwic29cIiwgXCJlc1wiLCBcInN1XCIsIFwic3dcIiwgXCJzdlwiLFxuXHRcdFx0XCJ0Z1wiLCBcInRhXCIsIFwidHRcIiwgXCJ0ZVwiLCBcInRoXCIsIFwidGlcIiwgXCJ0c1wiLCBcInRyXCIsIFwidGtcIiwgXCJha1wiLCBcInVrXCIsIFwidXJcIixcblx0XHRcdFwidWdcIiwgXCJ1elwiLCBcInZpXCIsIFwiY3lcIiwgXCJ4aFwiLCBcInlpXCIsIFwieW9cIiwgXCJ6dVwiXG5cdFx0XTtcblx0fVxufVxuIl19
